(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{444:function(t,v,e){"use strict";e.r(v);var _=e(17),s=Object(_.a)({},(function(){var t=this,v=t.$createElement,e=t._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"前言"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),e("blockquote",[e("p",[t._v("JavaScript是"),e("strong",[t._v("单线程")]),t._v("的，同一时间只能做一件事情。如果碰到某个耗时长的任务（比如一个需要 3s 的网络请求），那么后续的任务都要等待，这种效果是无法接受的，这时我们就引入了异步任务的概念。\n所以 JS 执行主要包括同步任务和异步任务,JS 的事件循环机制，它主要与异步任务有关。")]),t._v(" "),e("ul",[e("li",[t._v("同步任务：会放入到执行栈中，他们是要按顺序执行的任务；")]),t._v(" "),e("li",[t._v("异步任务：会放入到任务队列中，这些异步任务一定要等到执行栈清空后才会执行，也就是说异步任务一定是在同步任务之后执行的。")])])]),t._v(" "),e("h2",{attrs:{id:"任务队列"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#任务队列"}},[t._v("#")]),t._v(" 任务队列")]),t._v(" "),e("p",[t._v("事件循环主要与任务队列有关，所以必须要先知道宏任务与微任务。")]),t._v(" "),e("p",[t._v("在任务队列中，有两种任务："),e("strong",[t._v("宏任务")]),t._v("和"),e("strong",[t._v("微任务")]),t._v("。")]),t._v(" "),e("p",[e("code",[t._v("宏任务")]),t._v("：script标签中的整体代码、setTimeout、setInterval、setImmediate、I/0、UI渲染")]),t._v(" "),e("p",[e("code",[t._v("微任务")]),t._v("：process.nextTick（Node.js）、promise、Object.observe（不常用）、MutationObserver（Node.js）")]),t._v(" "),e("p",[t._v("任务优先级：process.nextTick > Promise.then > setTimeout > setImmediate")]),t._v(" "),e("p",[t._v("以上这些是常见的宏任务和微任务，记住就行了，不用追究为什么它是宏任务或微任务，因为就是这样的。")]),t._v(" "),e("h2",{attrs:{id:"事件循环"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件循环"}},[t._v("#")]),t._v(" 事件循环")]),t._v(" "),e("p",[t._v("事件循环（Event Loop）就是：")]),t._v(" "),e("ul",[e("li",[t._v("一开始整个脚本（script标签中的整体代码）作为一个宏任务执行；")]),t._v(" "),e("li",[t._v("执行过程中同步代码直接执行，宏任务进入宏任务队列，微任务进入微任务队列；")]),t._v(" "),e("li",[t._v("当前宏任务执行完毕后，立即执行当前微任务队列中的所有微任务（依次执行）；")]),t._v(" "),e("li",[t._v("当前宏任务执行完毕，开始检查渲染，然后 GUI 线程接管渲染（浏览器会在两个宏任务交接期间，对页面进行重新渲染）；")]),t._v(" "),e("li",[t._v("渲染完毕后，JS 线程继续接管，开始下一个宏任务（从任务队列中获取），依此循环，直到宏任务和微任务队列都为空。")])]),t._v(" "),e("blockquote",[e("p",[t._v("说的通俗一点：微任务是跟屁虫，一直跟着当前宏任务后面：代码执行过程中，每当碰到一个微任务，就马上跟在当前宏任务后面；当碰到一个宏任务，那不好意思你排到下一次循环再说。")])]),t._v(" "),e("p",[e("strong",[t._v("同一个事件循环中，微任务永远在宏任务之前执行")])])])}),[],!1,null,null,null);v.default=s.exports}}]);